package ca.uwaterloo.ece251.ast;

public class DefaultVisitor implements ASTVisitor {
    public void enter(Service s) {}
    public void enter(HTML h) {}
    public void enter(Schema s) {}
    public void enter(Variable v) {}
    public void enter(Function f) {}
    public void enter(Session s) {}
    public void enter(OpenHTMLBody s) {}
    public void enter(InputHTMLBody s) {}
    public void enter(CloseHTMLBody s) {}
    public void enter(MetaHTMLBody s) {}
    public void enter(SelectHTMLBody s) {}
    public void enter(WhateverHTMLBody s) {}
    public void enter(PlugHTMLBody s) {}
    public void enter(KeyValueAttribute a) {}
    public void enter(KeyOnlyAttribute a) {}
    public void enter(WigField f) {}
    public void enter(IdAttr a) {}
    public void enter(StringAttr a) {}
    public void enter(BaseDocument d) {}
    public void enter(PlugDocument d) {}
    public void enter(EmptyStm s) {}
    public void enter(EvalStm s) {}
    public void enter(CompoundStm s) {}
    public void enter(ExitStm s) {}
    public void enter(IfStm s) {}
    public void enter(ReturnStm s) {}
    public void enter(ReturnVoidStm s) {}
    public void enter(ShowStm s) {}
    public void enter(WhileStm s) {}
    public void enter(Input i) {}
    public void enter(AssignExp ae) {}
    public void enter(BinopExp be) {}
    public void enter(BoolLiteralExp be) {}
    public void enter(CallExp ce) {}
    public void enter(IntLiteralExp ie) {}
    public void enter(StringLiteralExp se) {}
    public void enter(TupleLiteralExp te) {}
    public void enter(TupleopExp te) {}
    public void enter(UnopExp ue) {}
    public void enter(Lvalue lv) {}
    public void enter(SimpleType st) {}
    public void enter(TupleType tt) {}

    public void leave(Service s) {}
    public void leave(HTML h) {}
    public void leave(Schema s) {}
    public void leave(Variable v) {}
    public void leave(Function f) {}
    public void leave(Session s) {}
    public void leave(OpenHTMLBody s) {}
    public void leave(InputHTMLBody s) {}
    public void leave(CloseHTMLBody s) {}
    public void leave(MetaHTMLBody s) {}
    public void leave(SelectHTMLBody s) {}
    public void leave(WhateverHTMLBody s) {}
    public void leave(PlugHTMLBody s) {}
    public void leave(KeyValueAttribute a) {}
    public void leave(KeyOnlyAttribute a) {}
    public void leave(WigField f) {}
    public void leave(IdAttr a) {}
    public void leave(StringAttr a) {}
    public void leave(BaseDocument d) {}
    public void leave(PlugDocument d) {}
    public void leave(EmptyStm s) {}
    public void leave(EvalStm s) {}
    public void leave(CompoundStm s) {}
    public void leave(ExitStm s) {}
    public void leave(IfStm s) {}
    public void leave(ReturnStm s) {}
    public void leave(ReturnVoidStm s) {}
    public void leave(ShowStm s) {}
    public void leave(WhileStm s) {}
    public void leave(Input i) {}
    public void leave(AssignExp ae) {}
    public void leave(BinopExp be) {}
    public void leave(BoolLiteralExp be) {}
    public void leave(CallExp ce) {}
    public void leave(IntLiteralExp ie) {}
    public void leave(StringLiteralExp se) {}
    public void leave(TupleLiteralExp te) {}
    public void leave(TupleopExp te) {}
    public void leave(UnopExp ue) {}
    public void leave(Lvalue lv) {}
    public void leave(SimpleType st) {}
    public void leave(TupleType tt) {}
}
